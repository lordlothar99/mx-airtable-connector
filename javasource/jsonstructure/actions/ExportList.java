// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jsonstructure.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import jsonstructure.export.MendixObjectExporter;
import jsonstructure.export.SortNumberProvider;
import jsonstructure.proxies.JSONArray;

/**
 * Export a list of any entity to a generic JSON array.
 * There must be an export microflow defined for the entity that is being exported.
 */
public class ExportList extends CustomJavaAction<IMendixObject>
{
	private java.util.List<IMendixObject> Input;
	private java.lang.String PrefixOverride;

	public ExportList(IContext context, java.util.List<IMendixObject> Input, java.lang.String PrefixOverride)
	{
		super(context);
		this.Input = Input;
		this.PrefixOverride = PrefixOverride;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		if (this.Input == null)
			return null;

		MendixObjectExporter mendixObjectExporter = new MendixObjectExporter(getContext());
		if (this.PrefixOverride != null)
			mendixObjectExporter.withMicroflowPrefix(this.PrefixOverride);

		JSONArray jsonArray = new JSONArray(getContext());

		this.Input.stream()
				.map(mendixObjectExporter::exportMendixObject)
				.peek(jsonObject -> jsonObject.setOrder(SortNumberProvider.next()))
				.forEach(jsonObject -> jsonObject.setarray_items(jsonArray));

		return jsonArray.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExportList";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
